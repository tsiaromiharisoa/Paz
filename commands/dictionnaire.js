const axios = require('axios');
const sendMessage = require('../handles/sendMessage'); // Importer la fonction sendMessage

// Objet pour stocker les recherches des utilisateurs
const userDictionaryRequests = {};

module.exports = async (senderId, userText) => {
    try {
        // V√©rifier si l'utilisateur a fourni un mot √† rechercher
        const wordToLookup = userText.trim().toLowerCase(); 

        // Si aucun mot n'est fourni, demander √† l'utilisateur d'entrer un mot
        if (!wordToLookup) {
            await sendMessage(senderId, "Veuillez fournir un mot √† rechercher dans le dictionnaire.");
            return;
        }

        // URL de l'API pour chercher le mot dans le dictionnaire
        const apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${encodeURIComponent(wordToLookup)}`;
        const response = await axios.get(apiUrl);

        // V√©rifier si la r√©ponse contient les informations n√©cessaires
        if (response.data && response.data.length > 0) {
            const data = response.data[0];
            let message = `üîé **Mot** : ${data.word}\n`;

            // Ajouter la phon√©tique si elle existe
            if (data.phonetic) {
                message += `üìñ **Phon√©tique** : ${data.phonetic}\n`;
            }

            // Ajouter les significations et exemples
            data.meanings.forEach((meaning) => {
                message += `\nüìö **Partie du discours** : ${meaning.partOfSpeech}\n`;
                meaning.definitions.forEach((definition, index) => {
                    message += `üìã **D√©finition ${index + 1}** : ${definition.definition}\n`;
                    if (definition.example) {
                        message += `üí° **Exemple** : ${definition.example}\n`;
                    }
                });
            });

            // Envoyer le message final √† l'utilisateur
            await sendMessage(senderId, message);
        } else {
            await sendMessage(senderId, "D√©sol√©, je n'ai pas pu trouver de d√©finition pour ce mot.");
        }
    } catch (error) {
        console.error('Erreur lors de l\'appel √† l\'API Dictionary:', error);

        // Envoyer un message d'erreur √† l'utilisateur en cas de probl√®me
        await sendMessage(senderId, 'D√©sol√©, une erreur s\'est produite lors de la recherche dans le dictionnaire.');
    }
};

// Ajouter les informations de la commande
module.exports.info = {
    name: "dictionnaire",  // Le nom de la commande
    description: "Recherchez un mot dans le dictionnaire et obtenez sa d√©finition, phon√©tique et exemples.",  // Description de la commande
    usage: "Envoyez 'dictionnaire <mot>' pour obtenir les informations sur le mot."  // Comment utiliser la commande
};
