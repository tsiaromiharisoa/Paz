const axios = require('axios');
const sendMessage = require('../handles/sendMessage'); // Importer la fonction sendMessage

module.exports = async (senderId, prompt, uid) => { 
    try {
        // Envoyer un message de confirmation que le message a Ã©tÃ© reÃ§u
        await sendMessage(senderId, "ğŸ’­ğŸ“¡ Connexion au flux dâ€™informationsâ€¦ ğŸ“¡ğŸ’­");

        // Construire l'URL de l'API pour rÃ©soudre la question avec UID
        const apiUrl = `https://kaiz-apis.gleeze.com/api/claude-sonnet-3.5?q=${encodeURIComponent(prompt)}&uid=${uid}`;
        const response = await axios.get(apiUrl);

        // RÃ©cupÃ©rer la bonne clÃ© dans la rÃ©ponse de l'API
        const reply = response.data.response;

        // Attendre 2 secondes avant d'envoyer la rÃ©ponse
        await new Promise(resolve => setTimeout(resolve, 2000));

        // Envoyer la rÃ©ponse de l'API Ã  l'utilisateur
        await sendMessage(senderId, reply);
    } catch (error) {
        console.error('Erreur lors de l\'appel Ã  l\'API Luffy AI:', error);

        // Envoyer un message d'erreur Ã  l'utilisateur en cas de problÃ¨me
        await sendMessage(senderId, "DÃ©solÃ©, une erreur s'est produite lors du traitement de votre message.");
    }
};

// Ajouter les informations de la commande
module.exports.info = {
Â Â Â  name: "phi", // Le nouveau nom de la commande
Â Â Â  description: "Posez une question ou donnez un sujet, et recevez une rÃ©ponse gÃ©nÃ©rÃ©e par l'IA.", // Nouvelle description
Â Â Â  usage: "Envoyez 'phi <votre question>' pour obtenir une rÃ©ponse." // Nouveau mode d'emploi
};
